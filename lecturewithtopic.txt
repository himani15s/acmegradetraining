**************************lecture 1*********************
1. h1,input
2. button,h1 with image and css
3. change color according to user(using script)









**************************lecture 2*********************
1. we can add css for class (classname-which can be same for many element)
    by
    .classname
    {
    }
2. we can define multiple class in one container like <div class="classname1 cn2 cn3>  
3. we will give priorty according to order of writing code in which manner in internal css.
   -->first css priorty will be given to inline css
   -->if you want to priortize some tag you have to write important in that
 






**************************lecture 3*************************
1. padding
   padding: top,right,bottom,left;
   padding topbottom-leftright

   border
   border-width: 20px ;
   border-color: red;
   border-style: dashed; 
   instead of that we can right
   border: 10px red solid; 

2.margin
   margin will affect other element 
   margin is outside area of border of the element

3.DIV container
for making whole body screen color 
 body
{
    background-color: color;
} 
 we can div under div which is block element which means next element come to under next line

4.span -span - it will not devide content in between we can use  in between line this span container
5. center- 
   text-align:center - to get text in center we can do.
   to get but as center we use width 100%
   to get as center heading we  use display:inline block it 
6.small project on box model which show add to cart product




***********************lecture 4 ***************************
1.
relative position:-relative positiove move to its current position
margin will cover entire area.

2.
absolute will change position according to viewport
if we will give parent as a relative then child absolute follow positon of parent.

3. 
translate-if we want to put item exactly in center then we will use translate function

4.
we can hide element by display hidden.
we want element when it is hover on menu.

5.
position:absolute;
top: 50%;
left: 50%;
transform:translate(-50%,-50%) ;
use to center an item.

6.
position fixed will stay fixed for every situtation

7.sticky will behave like fixed and moving both
after reaching it max widhth it will fixed.
it look like it is moving while scrolling.




******************************lecture 5******************************

1.flex:-In HTML, "flex" usually refers to the flexible box layout model, also known as Flexbox. Flexbox is a layout system that allows developers to create flexible and responsive layouts for web pages.   

inline-block use in child while flex used in parent.

  justify-content will only for row direction it will not work for column beacuse in row in jnow  ending and starting point.it will work for column when height is given.
 browser can no determine how many height it want.

  flex-direction
  justify-content-"justify-content" is used to align the flex items along the main axis of the flex container. The main axis is the primary axis of the flex container. The possible values for "justify-content" are.it have horizonatal control:
  flex-wrap
  align-content
  align-item- It specifies the default alignment for all the flex items within the flex container when they do not have a specific alignment set for themselves.it have vertical control.

   we can make many things by applying all properties
     if change direction column then jusitify-content work vertical .
     if change direction row then align-items work horizontal.


2.flexwrap
 gap-it will gap between two element.
 it will create gap between elements. 
child will take space according to parent if parent consume more space the child child will take its whole space but if parent widht is equal to child child will automatically shrink.
parent determine how much space shild should occupied.

how much element you want in one row it can control by parent.

"align-items" aligns the individual flex items along the cross-axis,align item can not do its work when height and wrap barrier.
"align-content" aligns the lines of flex items along the cross-axis in a multi-line flex container.it will work when height is barrier and also wrap it applied we have to use aligncontent.


3.    align-self:- if we want to give propeties to indivisual item then we give align self